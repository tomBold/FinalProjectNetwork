#include <sys/types.h>
#include <netinet/in.h>
#include <inttypes.h>
#include <arpa/inet.h>
#include <netdb.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <strings.h>
#include <unistd.h>
#include <stdio.h>


void printsin(struct sockaddr_in *s, char *str1, char *str2) {
	printf("%s\n", str1);
	printf("%s %s %x", str2,inet_ntoa(s->sin_addr),s->sin_port);
	printf("\n");
}

typedef struct {
	char head;
	u_long  body;
	char tail;
} tMsg;

void forwardMsg(tMsg msg);

int main(int argc, char *argv[])
{
	printf("UDP server is starting...\n");
	int socket_fd;
	unsigned int fsize;
	struct sockaddr_in  s_in;
	struct sockaddr_in from;


	/**
	 * int socket(int domain, int type, int protocol);
	 * creates a UDP socket
	 * AF_INET - IPv4 Internet protocols
	 * SOCK_DGRAM - UDP
	 * 0 - default protocol type fo UDP
	 */
	socket_fd = socket (AF_INET, SOCK_DGRAM, 0);

	// clear the s_in struct
	bzero((char *) &s_in, sizeof(s_in));  /* They say you must do this    */

	//sets the sin address
	s_in.sin_family = (short)AF_INET;
	s_in.sin_addr.s_addr = htonl(INADDR_ANY);    /* WILDCARD */
	s_in.sin_port = htons((u_short)0x3333);

	printsin( &s_in, "RECV_UDP", "Local socket is:");
	fflush(stdout);

	//bind the socket on the specified address
	printf("UDP server binding...\n");
	bind(socket_fd, (struct sockaddr *)&s_in, sizeof(s_in));

	for(;;) {
		printf("UDP server receive loop...\n");
		fsize = sizeof(from);
		//ssize_t recvfrom(int sockfd, void *buf, size_t len, int flags,
		//					struct sockaddr *src_addr, socklen_t *addrlen);
		tMsg msg;
		memset((void*)msg,0,sizeof(tMsg));
		int cc = recvfrom(socket_fd,&msg,sizeof(msg),0,(struct sockaddr *)&from,&fsize);
		printsin( &from, "recv_udp: ", "Packet from:");
		printf("Got data ::%c%ld%c\n",msg.head,(long) ntohl(msg.body),msg.tail);
		forwardMsg(msg);
		fflush(stdout);
	}

	return 0;
}

void forwardMsg(tMsg msg){
	printf("UDP client is starting...\n");
		int socket_fd;
		struct sockaddr_in  dest;
		struct hostent *hostptr;

		socket_fd = socket (AF_INET, SOCK_DGRAM, 0);
		bzero((char *) &dest, sizeof(dest)); /* They say you must do this */
		hostptr = gethostbyname(argv[1]);
		dest.sin_family = (short) AF_INET;
		bcopy(hostptr->h_addr, (char *)&dest.sin_addr,hostptr->h_length);
		dest.sin_port = htons((u_short)0x3333);


		int count = 0;
		while(1){
			memset((void*)&msgbuf,0,sizeof(msgbuf));
			msgbuf.head = '<';
			msgbuf.body = htonl(count); /* IMPORTANT! */
			msgbuf.tail = '>';
			printf("UDP client sending msg: %c %d %c\n",msgbuf.head,ntohl(msgbuf.body),msgbuf.tail);
			sendto(socket_fd,&msgbuf,sizeof(msgbuf),0,(struct sockaddr *)&dest,
					sizeof(dest));
			sleep(1);
			count++;
		}
		return 0;
}


