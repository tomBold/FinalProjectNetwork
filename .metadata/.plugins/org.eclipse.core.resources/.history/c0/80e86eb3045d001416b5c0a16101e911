
#include "TCPMessengerServer.h"
#include "TCPMessengerProtocol.h"

/***********************   TCPMessengerServer implementation ******************************/

TCPMessengerServer::TCPMessengerServer(){
	//TODO: class initialization
}

void TCPMessengerServer::close(){
	//TODO: close the server
}

TCPMessengerServer::~TCPMessengerServer(){
}

int TCPMessengerServer::readCommandFromPeer(TCPSocket* peer){
}

string TCPMessengerServer::readDataFromPeer(TCPSocket* peer){
	string msg;
	char buff[1500];
	int msgLen;
	peer->recv((char*)&msgLen,4);
	msgLen = ntohl(msgLen);
	int totalrc = 0;
	int rc;
	while (totalrc < msgLen){
		rc = peer->recv((char*)&buff[totalrc],msgLen-totalrc);
		if (rc>0){
			totalrc += rc;
		}else{
			break;
		}
	}
	if (rc > 0 && totalrc == msgLen){
		buff[msgLen] = 0;
		msg = buff;
	}else{
		peer->cclose();
	}
	return msg;
}

void TCPMessengerServer::sendCommandToPeer(TCPSocket* peer, int command){
	command = htonl(command);
	peer->send((char*)&command,4);
}

void TCPMessengerServer::sendDataToPeer(TCPSocket* peer, string msg){
	int msgLen = msg.length();
	msgLen = htonl(msgLen);
	peer->send((char*)&msgLen,4);
	peer->send(msg.data(),msg.length());
}

void TCPMessengerServer::listPeers(){
	dispatcher->listPeers();
}

